#!/bin/bash

###################################################################################
#----------Flag and argument processing-------------------------------------------#
###################################################################################

#----------Cheking flags' operand and setting the related variable for each--------
method=
while getopts 'M:' OPTION
do
    case $OPTION in
#    a)
#       aflag=1
#       ;;
    M)
        if [ $OPTARG == "not-raw"  ] || [ $OPTARG == "raw-3step"  ] || [ $OPTARG == "raw-1step"  ]
        then
            method="$OPTARG"
        else
            echo "$(basename $0): Invalid operand for -M, select operand from [not-raw | raw-3step | raw-1step]"
            exit 2
        fi
        ;;
    ?)
        echo "Usage: $(basename $0): -M [not-raw | raw-3step | raw-1step] args"  >&2
        exit 2
    ;;
    esac
done

#----------Setting the results' directory pathi from the command argument----------
shift $(expr $OPTIND - 1)                                                                                                      

if [ "$*" ]
then
    resultsPath="$*/$method"
else
    resultsPath="../results/collected/$method"
fi


###################################################################################
#---------Making reqired directories and other primarily settings-----------------#
###################################################################################

#---------Adding $resultPath directory in the results----------------------------------
if [ ! -d $resultPath ]
then
    mkdir $resultPath 
    if [ $? == 0 ]
    then
        echo "$resultPath directory created successfully!"
    else
        exit 1
fi
echo

#----------Name of the results' directory for the current run----------------------
#----------Used the current date and time to make it unique------------------------
date=`date +%F`
hour=`date +%H`
minute=`date +%M`
second=`date +%S`
runTime=$date-$hour-$minute-$second


###################################################################################
#----------Extracting the subcommands and their tags from the config file---------# 
###################################################################################

#----------Finding number of tags for the upcoming tests---------------------------
tagNumber=$(cat ../config/redfish-subcommands.conf | sed -n -e '/---/,$p' | wc -l)

for i in `seq 2 $tagNumber`
do
    tagName=`cat ../config/redfish-subcommands.conf | sed -n -e '/---/,$p' | awk '{print $1}' | head -n +$i | tail -1`
    subCommand=`cat ../config/redfish-subcommands.conf | sed -n -e '/---/,$p' |awk -F $'\t' '{print $2}' | head -n +$i | tail -1`

#----------Creating tagName and runTime directory to save monitoring results-------
    tagNameCapital=`echo $tagName | tr [a-z] [A-Z]`
    echo "************************************************ $tagNameCapital ************************************************"
    mkdir -p $resultPath/$runTime/$tagName

#----------Creating rackID directory to save monitoring results--------------------
    for rack in  `cat ../config/cluster.conf | sed -e '1,/--/d' | awk '{print $1}' | grep -v '^ *$' | uniq`
    do
        mkdir $resultPath/$runTime/$tagName/$rack
    done
    
    echo "$resultPath/$runTime/$tagName and all racks subdirectory created successfully!"
    echo "*******************************************************************************************************"


###################################################################################
#----------Gathering data for each tag from all cluster nodes----------------------
###################################################################################
    for node in `cat ../config/cluster.conf | sed -e '1,/--/d' | awk '{print $3}' | grep -v '^ *$'`
    do
        rackID=`cat ../config/cluster.conf | grep -w $node | awk -F$'\t' '{print $1}'`
        nodeID=`cat ../config/cluster.conf | grep -w $node | awk -F$'\t' '{print $2}'`
        (time python3.4 ../tools/Redfishtool/redfishtool.py -r $node -SAlways -u root -p calvin -ss -vvv $subCommand) &> $resultsPath/$runTime/$tagName/$rackID/$rackID-$nodeID && echo "$rackID-$nodeID responce saved" &
    done
    wait

    echo
    echo
done
